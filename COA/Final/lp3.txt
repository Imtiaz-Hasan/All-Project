2**********

.MODEL SMALL
.STACK 100H
.DATA
                A DB   'THE NUMBER IS EQUAL$'
                B DB   'THE NUMBER IS NOT EQAUL$'

.CODE

MAIN    PROC 

        MOV  AX,@DATA
        MOV  DS,AX 

        MOV  AH,1
        INT  21H

        MOV  DL,AL

        INT 21H

        CMP AL,DL
        JNE NOT_EQUAL

        MOV AH,9
        LEA DX,A
        INT 21H
        JMP EXIT

NOT_EQUAL:
        
        MOV AH,9
        LEA DX,B
        INT 21H

EXIT:
        MOV AH,4CH
        INT 21H

MAIN    ENDP
        END  MAIN





3******



.MODEL SMALL
.STACK 100H
 
.DATA
 VOWEL DB 0DH,0AH,'VOWEL$'
 CONSONANT DB 0DH,0AH,'CONSONANT$'
  
.CODE
MAIN PROC
  
 MOV AX,@DATA
 MOV DS,AX
  
 MOV AH,1
 INT 21H
 CMP AL,'A'
 JE VL
 CMP AL,'E'
 JE VL
 CMP AL,'I'
 JE VL
 CMP AL,'O'
 JE VL
 CMP AL,'U'
 JE VL
 CMP AL,'a'
 JE VL
 CMP AL,'e'
 JE VL
 CMP AL,'i'
 JE VL
 CMP AL,'o'
 JE VL
 CMP AL,'u'
 JE VL
 
  JMP EXIT
   
 VL:
  LEA DX,VOWEL
  MOV AH,9
  INT 21H
   
 EXIT:
  MOV AH,4CH
  INT 21H
 MAIN ENDP
END MAIN



4********



.MODEL SMALL
.STACK 100H
 
.DATA
 VOWEL DB 0DH,0AH,'VOWEL$'
 CONSONANT DB 0DH,0AH,'CONSONANT$'
  
.CODE
MAIN PROC
  
 MOV AX,@DATA
 MOV DS,AX
  
 MOV AH,1
 INT 21H
 CMP AL,'A'
 JE VL
 CMP AL,'E'
 JE VL
 CMP AL,'I'
 JE VL
 CMP AL,'O'
 JE VL
 CMP AL,'U'
 JE VL
 CMP AL,'a'
 JE VL
 CMP AL,'e'
 JE VL
 CMP AL,'i'
 JE VL
 CMP AL,'o'
 JE VL
 CMP AL,'u'
 JE VL
  LEA DX,CONSONANT
  MOV AH,9
  INT 21H
  JMP EXIT
   
 VL:
  LEA DX,VOWEL
  MOV AH,9
  INT 21H
   
 EXIT:
  MOV AH,4CH
  INT 21H
 MAIN ENDP
END MAIN



6***********



.model small
.stack 100h
.data 

A DB 'NEGATIVE $'
B DB 'ZERO $'
C DB 'POSITIVE $'


.code
main proc



cmp ax, 0     
jl neg        
je zero      
jg pos        
neg:
mov bx,A
jmp endcase
zero:
mov bx,B
jmp EXIT
pos:
mov bx,C    
EXIT:
mov ah,4ch
int 21h

main endp
end main



7*********



.MODEL SMALL
.STACK 100H
.DATA
.CODE
 MAIN PROC
 MOV CX,AX
 CMP BX,CX
 JLE NEXT
 MOV CX,BX
 MOV AH,4CH
 INT 21H
MAIN ENDP
  END MAIN

